running Experiment from ExperimentRunner...

DEMO: CLASSIFICATION: True, REGRESSION: False

DEMO: hyperparams: 
	max_iterations: 10
	batch_size: 50
	eta: 3
	layer_activation_funcs: ['sigmoid', 'sigmoid']
	use_momentum: True
	momentum_beta: 0.9
	k: 10

  layers: [6, 10, 4]


DEMO: layer_activation_funcs: ['sigmoid', 'sigmoid']

DEMO: data_set_name: 	car

DEMO: raw data: 

     buying  maint  doors persons lug_boot safety  CLASS
0     vhigh  vhigh      2       2    small    low  unacc
1     vhigh  vhigh      2       2    small    med  unacc
2     vhigh  vhigh      2       2    small   high  unacc
3     vhigh  vhigh      2       2      med    low  unacc
4     vhigh  vhigh      2       2      med    med  unacc
5     vhigh  vhigh      2       2      med   high  unacc
6     vhigh  vhigh      2       2      big    low  unacc
7     vhigh  vhigh      2       2      big    med  unacc
8     vhigh  vhigh      2       2      big   high  unacc
9     vhigh  vhigh      2       4    small    low  unacc
10    vhigh  vhigh      2       4    small    med  unacc
11    vhigh  vhigh      2       4    small   high  unacc
12    vhigh  vhigh      2       4      med    low  unacc
13    vhigh  vhigh      2       4      med    med  unacc
14    vhigh  vhigh      2       4      med   high  unacc
15    vhigh  vhigh      2       4      big    low  unacc
16    vhigh  vhigh      2       4      big    med  unacc
17    vhigh  vhigh      2       4      big   high  unacc
18    vhigh  vhigh      2    more    small    low  unacc
19    vhigh  vhigh      2    more    small    med  unacc
20    vhigh  vhigh      2    more    small   high  unacc
21    vhigh  vhigh      2    more      med    low  unacc
22    vhigh  vhigh      2    more      med    med  unacc
23    vhigh  vhigh      2    more      med   high  unacc
24    vhigh  vhigh      2    more      big    low  unacc
25    vhigh  vhigh      2    more      big    med  unacc
26    vhigh  vhigh      2    more      big   high  unacc
27    vhigh  vhigh      3       2    small    low  unacc
28    vhigh  vhigh      3       2    small    med  unacc
29    vhigh  vhigh      3       2    small   high  unacc
...     ...    ...    ...     ...      ...    ...    ...
1698    low    low      4    more      big    low  unacc
1699    low    low      4    more      big    med   good
1700    low    low      4    more      big   high  vgood
1701    low    low  5more       2    small    low  unacc
1702    low    low  5more       2    small    med  unacc
1703    low    low  5more       2    small   high  unacc
1704    low    low  5more       2      med    low  unacc
1705    low    low  5more       2      med    med  unacc
1706    low    low  5more       2      med   high  unacc
1707    low    low  5more       2      big    low  unacc
1708    low    low  5more       2      big    med  unacc
1709    low    low  5more       2      big   high  unacc
1710    low    low  5more       4    small    low  unacc
1711    low    low  5more       4    small    med    acc
1712    low    low  5more       4    small   high   good
1713    low    low  5more       4      med    low  unacc
1714    low    low  5more       4      med    med   good
1715    low    low  5more       4      med   high  vgood
1716    low    low  5more       4      big    low  unacc
1717    low    low  5more       4      big    med   good
1718    low    low  5more       4      big   high  vgood
1719    low    low  5more    more    small    low  unacc
1720    low    low  5more    more    small    med    acc
1721    low    low  5more    more    small   high   good
1722    low    low  5more    more      med    low  unacc
1723    low    low  5more    more      med    med   good
1724    low    low  5more    more      med   high  vgood
1725    low    low  5more    more      big    low  unacc
1726    low    low  5more    more      big    med   good
1727    low    low  5more    more      big   high  vgood

[1728 rows x 7 columns], shape: (1728, 7)

DEMO: ---------------------------------------------------------------------------------------------------

DEMO: preprocessed data: 

      buying  maint     doors  persons  lug_boot  safety  CLASS
0        0.0    0.0  0.000000      0.0       0.0     0.0  unacc
1        0.0    0.0  0.000000      0.0       0.0     0.5  unacc
2        0.0    0.0  0.000000      0.0       0.0     1.0  unacc
3        0.0    0.0  0.000000      0.0       0.5     0.0  unacc
4        0.0    0.0  0.000000      0.0       0.5     0.5  unacc
5        0.0    0.0  0.000000      0.0       0.5     1.0  unacc
6        0.0    0.0  0.000000      0.0       1.0     0.0  unacc
7        0.0    0.0  0.000000      0.0       1.0     0.5  unacc
8        0.0    0.0  0.000000      0.0       1.0     1.0  unacc
9        0.0    0.0  0.000000      0.5       0.0     0.0  unacc
10       0.0    0.0  0.000000      0.5       0.0     0.5  unacc
11       0.0    0.0  0.000000      0.5       0.0     1.0  unacc
12       0.0    0.0  0.000000      0.5       0.5     0.0  unacc
13       0.0    0.0  0.000000      0.5       0.5     0.5  unacc
14       0.0    0.0  0.000000      0.5       0.5     1.0  unacc
15       0.0    0.0  0.000000      0.5       1.0     0.0  unacc
16       0.0    0.0  0.000000      0.5       1.0     0.5  unacc
17       0.0    0.0  0.000000      0.5       1.0     1.0  unacc
18       0.0    0.0  0.000000      1.0       0.0     0.0  unacc
19       0.0    0.0  0.000000      1.0       0.0     0.5  unacc
20       0.0    0.0  0.000000      1.0       0.0     1.0  unacc
21       0.0    0.0  0.000000      1.0       0.5     0.0  unacc
22       0.0    0.0  0.000000      1.0       0.5     0.5  unacc
23       0.0    0.0  0.000000      1.0       0.5     1.0  unacc
24       0.0    0.0  0.000000      1.0       1.0     0.0  unacc
25       0.0    0.0  0.000000      1.0       1.0     0.5  unacc
26       0.0    0.0  0.000000      1.0       1.0     1.0  unacc
27       0.0    0.0  0.333333      0.0       0.0     0.0  unacc
28       0.0    0.0  0.333333      0.0       0.0     0.5  unacc
29       0.0    0.0  0.333333      0.0       0.0     1.0  unacc
...      ...    ...       ...      ...       ...     ...    ...
1698     1.0    1.0  0.666667      1.0       1.0     0.0  unacc
1699     1.0    1.0  0.666667      1.0       1.0     0.5   good
1700     1.0    1.0  0.666667      1.0       1.0     1.0  vgood
1701     1.0    1.0  1.000000      0.0       0.0     0.0  unacc
1702     1.0    1.0  1.000000      0.0       0.0     0.5  unacc
1703     1.0    1.0  1.000000      0.0       0.0     1.0  unacc
1704     1.0    1.0  1.000000      0.0       0.5     0.0  unacc
1705     1.0    1.0  1.000000      0.0       0.5     0.5  unacc
1706     1.0    1.0  1.000000      0.0       0.5     1.0  unacc
1707     1.0    1.0  1.000000      0.0       1.0     0.0  unacc
1708     1.0    1.0  1.000000      0.0       1.0     0.5  unacc
1709     1.0    1.0  1.000000      0.0       1.0     1.0  unacc
1710     1.0    1.0  1.000000      0.5       0.0     0.0  unacc
1711     1.0    1.0  1.000000      0.5       0.0     0.5    acc
1712     1.0    1.0  1.000000      0.5       0.0     1.0   good
1713     1.0    1.0  1.000000      0.5       0.5     0.0  unacc
1714     1.0    1.0  1.000000      0.5       0.5     0.5   good
1715     1.0    1.0  1.000000      0.5       0.5     1.0  vgood
1716     1.0    1.0  1.000000      0.5       1.0     0.0  unacc
1717     1.0    1.0  1.000000      0.5       1.0     0.5   good
1718     1.0    1.0  1.000000      0.5       1.0     1.0  vgood
1719     1.0    1.0  1.000000      1.0       0.0     0.0  unacc
1720     1.0    1.0  1.000000      1.0       0.0     0.5    acc
1721     1.0    1.0  1.000000      1.0       0.0     1.0   good
1722     1.0    1.0  1.000000      1.0       0.5     0.0  unacc
1723     1.0    1.0  1.000000      1.0       0.5     0.5   good
1724     1.0    1.0  1.000000      1.0       0.5     1.0  vgood
1725     1.0    1.0  1.000000      1.0       1.0     0.0  unacc
1726     1.0    1.0  1.000000      1.0       1.0     0.5   good
1727     1.0    1.0  1.000000      1.0       1.0     1.0  vgood

[1728 rows x 7 columns], shape: (1728, 7)

DEMO: ---------------------------------------------------------------------------------------------------

DEMO: data_set_name: car

DEMO: cv_partition: 1, iteration: 1, accuracy: 0.67442
DEMO: cv_partition: 1, iteration: 2, accuracy: 0.67442
DEMO: cv_partition: 1, iteration: 3, accuracy: 0.67442
DEMO: cv_partition: 1, iteration: 4, accuracy: 0.70349
DEMO: cv_partition: 1, iteration: 5, accuracy: 0.72093
DEMO: cv_partition: 1, iteration: 6, accuracy: 0.73837
DEMO: cv_partition: 1, iteration: 7, accuracy: 0.74419
DEMO: cv_partition: 1, iteration: 8, accuracy: 0.75
DEMO: cv_partition: 1, iteration: 9, accuracy: 0.74419
DEMO: cv_partition: 1, iteration: 10, accuracy: 0.77326

DEMO: accuracy_vals for partition 1: [0.67442, 0.67442, 0.67442, 0.70349, 0.72093, 0.73837, 0.74419, 0.75, 0.74419, 0.77326]

DEMO: cv_partition: 2, iteration: 1, accuracy: 0.67442
DEMO: cv_partition: 2, iteration: 2, accuracy: 0.67442
DEMO: cv_partition: 2, iteration: 3, accuracy: 0.67442
DEMO: cv_partition: 2, iteration: 4, accuracy: 0.72093
DEMO: cv_partition: 2, iteration: 5, accuracy: 0.84302
DEMO: cv_partition: 2, iteration: 6, accuracy: 0.75581
DEMO: cv_partition: 2, iteration: 7, accuracy: 0.84302
DEMO: cv_partition: 2, iteration: 8, accuracy: 0.81395
DEMO: cv_partition: 2, iteration: 9, accuracy: 0.82558
DEMO: cv_partition: 2, iteration: 10, accuracy: 0.85465

DEMO: accuracy_vals for partition 2: [0.67442, 0.67442, 0.67442, 0.72093, 0.84302, 0.75581, 0.84302, 0.81395, 0.82558, 0.85465]

DEMO: cv_partition: 3, iteration: 1, accuracy: 0.73256
DEMO: cv_partition: 3, iteration: 2, accuracy: 0.73256
DEMO: cv_partition: 3, iteration: 3, accuracy: 0.73256
DEMO: cv_partition: 3, iteration: 4, accuracy: 0.77326
DEMO: cv_partition: 3, iteration: 5, accuracy: 0.76163
DEMO: cv_partition: 3, iteration: 6, accuracy: 0.76163
DEMO: cv_partition: 3, iteration: 7, accuracy: 0.76163
DEMO: cv_partition: 3, iteration: 8, accuracy: 0.77326
DEMO: cv_partition: 3, iteration: 9, accuracy: 0.78488
DEMO: cv_partition: 3, iteration: 10, accuracy: 0.76163

DEMO: accuracy_vals for partition 3: [0.73256, 0.73256, 0.73256, 0.77326, 0.76163, 0.76163, 0.76163, 0.77326, 0.78488, 0.76163]

DEMO: cv_partition: 4, iteration: 1, accuracy: 0.76163
DEMO: cv_partition: 4, iteration: 2, accuracy: 0.76163
DEMO: cv_partition: 4, iteration: 3, accuracy: 0.80233
DEMO: cv_partition: 4, iteration: 4, accuracy: 0.80814
DEMO: cv_partition: 4, iteration: 5, accuracy: 0.8314
DEMO: cv_partition: 4, iteration: 6, accuracy: 0.82558
DEMO: cv_partition: 4, iteration: 7, accuracy: 0.82558
DEMO: cv_partition: 4, iteration: 8, accuracy: 0.84302
DEMO: cv_partition: 4, iteration: 9, accuracy: 0.84302
DEMO: cv_partition: 4, iteration: 10, accuracy: 0.86047

DEMO: accuracy_vals for partition 4: [0.76163, 0.76163, 0.80233, 0.80814, 0.8314, 0.82558, 0.82558, 0.84302, 0.84302, 0.86047]

DEMO: cv_partition: 5, iteration: 1, accuracy: 0.69186
DEMO: cv_partition: 5, iteration: 2, accuracy: 0.69186
DEMO: cv_partition: 5, iteration: 3, accuracy: 0.69186
DEMO: cv_partition: 5, iteration: 4, accuracy: 0.69186
DEMO: cv_partition: 5, iteration: 5, accuracy: 0.69186
DEMO: cv_partition: 5, iteration: 6, accuracy: 0.7093
DEMO: cv_partition: 5, iteration: 7, accuracy: 0.72674
DEMO: cv_partition: 5, iteration: 8, accuracy: 0.73256
DEMO: cv_partition: 5, iteration: 9, accuracy: 0.77907
DEMO: cv_partition: 5, iteration: 10, accuracy: 0.76163

DEMO: accuracy_vals for partition 5: [0.69186, 0.69186, 0.69186, 0.69186, 0.69186, 0.7093, 0.72674, 0.73256, 0.77907, 0.76163]

DEMO: cv_partition: 6, iteration: 1, accuracy: 0.69767
DEMO: cv_partition: 6, iteration: 2, accuracy: 0.69767
DEMO: cv_partition: 6, iteration: 3, accuracy: 0.72093
DEMO: cv_partition: 6, iteration: 4, accuracy: 0.74419
DEMO: cv_partition: 6, iteration: 5, accuracy: 0.72093
DEMO: cv_partition: 6, iteration: 6, accuracy: 0.75
DEMO: cv_partition: 6, iteration: 7, accuracy: 0.81395
DEMO: cv_partition: 6, iteration: 8, accuracy: 0.81395
DEMO: cv_partition: 6, iteration: 9, accuracy: 0.82558
DEMO: cv_partition: 6, iteration: 10, accuracy: 0.81977

DEMO: accuracy_vals for partition 6: [0.69767, 0.69767, 0.72093, 0.74419, 0.72093, 0.75, 0.81395, 0.81395, 0.82558, 0.81977]

DEMO: cv_partition: 7, iteration: 1, accuracy: 0.63372
DEMO: cv_partition: 7, iteration: 2, accuracy: 0.63372
DEMO: cv_partition: 7, iteration: 3, accuracy: 0.63372
DEMO: cv_partition: 7, iteration: 4, accuracy: 0.69767
DEMO: cv_partition: 7, iteration: 5, accuracy: 0.77907
DEMO: cv_partition: 7, iteration: 6, accuracy: 0.83721
DEMO: cv_partition: 7, iteration: 7, accuracy: 0.75
DEMO: cv_partition: 7, iteration: 8, accuracy: 0.79651
DEMO: cv_partition: 7, iteration: 9, accuracy: 0.82558
DEMO: cv_partition: 7, iteration: 10, accuracy: 0.83721

DEMO: accuracy_vals for partition 7: [0.63372, 0.63372, 0.63372, 0.69767, 0.77907, 0.83721, 0.75, 0.79651, 0.82558, 0.83721]

DEMO: cv_partition: 8, iteration: 1, accuracy: 0.69767
DEMO: cv_partition: 8, iteration: 2, accuracy: 0.69767
DEMO: cv_partition: 8, iteration: 3, accuracy: 0.69767
DEMO: cv_partition: 8, iteration: 4, accuracy: 0.70349
DEMO: cv_partition: 8, iteration: 5, accuracy: 0.72674
DEMO: cv_partition: 8, iteration: 6, accuracy: 0.73837
DEMO: cv_partition: 8, iteration: 7, accuracy: 0.73837
DEMO: cv_partition: 8, iteration: 8, accuracy: 0.75
DEMO: cv_partition: 8, iteration: 9, accuracy: 0.75581
DEMO: cv_partition: 8, iteration: 10, accuracy: 0.75581

DEMO: accuracy_vals for partition 8: [0.69767, 0.69767, 0.69767, 0.70349, 0.72674, 0.73837, 0.73837, 0.75, 0.75581, 0.75581]

DEMO: cv_partition: 9, iteration: 1, accuracy: 0.73256
DEMO: cv_partition: 9, iteration: 2, accuracy: 0.73256
DEMO: cv_partition: 9, iteration: 3, accuracy: 0.75
DEMO: cv_partition: 9, iteration: 4, accuracy: 0.76163
DEMO: cv_partition: 9, iteration: 5, accuracy: 0.78488
DEMO: cv_partition: 9, iteration: 6, accuracy: 0.82558
DEMO: cv_partition: 9, iteration: 7, accuracy: 0.83721
DEMO: cv_partition: 9, iteration: 8, accuracy: 0.81395
DEMO: cv_partition: 9, iteration: 9, accuracy: 0.83721
DEMO: cv_partition: 9, iteration: 10, accuracy: 0.84884

DEMO: accuracy_vals for partition 9: [0.73256, 0.73256, 0.75, 0.76163, 0.78488, 0.82558, 0.83721, 0.81395, 0.83721, 0.84884]

DEMO: cv_partition: 10, iteration: 1, accuracy: 0.7093
DEMO: cv_partition: 10, iteration: 2, accuracy: 0.7093
DEMO: cv_partition: 10, iteration: 3, accuracy: 0.72674
DEMO: cv_partition: 10, iteration: 4, accuracy: 0.77326
DEMO: cv_partition: 10, iteration: 5, accuracy: 0.83721
DEMO: cv_partition: 10, iteration: 6, accuracy: 0.84884
DEMO: cv_partition: 10, iteration: 7, accuracy: 0.86047
DEMO: cv_partition: 10, iteration: 8, accuracy: 0.86628
DEMO: cv_partition: 10, iteration: 9, accuracy: 0.86628
DEMO: cv_partition: 10, iteration: 10, accuracy: 0.86047

DEMO: accuracy_vals for partition 10: [0.7093, 0.7093, 0.72674, 0.77326, 0.83721, 0.84884, 0.86047, 0.86628, 0.86628, 0.86047]

DEMO: ------------------------------------------------------------ TRAINING DONE ------------------------------------------------------------

DEMO: trained network: weights --> 

[array([[-1.19068598, -1.15431365,  0.12305119, -1.3071765 , -0.5027701 ,
        -0.71062269],
       [-0.40955578, -0.62810299,  1.07223997, -3.03299362,  0.44495969,
         1.02579387],
       [ 1.31315805,  0.8049301 , -0.66035823, -1.76330685,  0.02877151,
        -3.09431773],
       [ 0.79484999, -0.71443038,  0.37762206, -0.23342284,  0.62605648,
         0.50285378],
       [ 0.82816574,  0.67680682, -0.27750598,  0.73698875,  0.23518652,
        -0.7227449 ],
       [-2.08512654, -2.23907349,  0.35246934, -0.6417325 , -1.05347426,
         0.3389281 ],
       [ 1.00458486,  0.4159341 ,  0.50183975, -0.83687685, -0.416288  ,
        -0.48353167],
       [ 0.54793976,  0.4169029 ,  0.80083318, -0.81915399,  0.79936117,
         1.4440896 ],
       [ 1.55256565,  0.56598303, -0.44189369,  1.87676896,  0.28565123,
         1.54247004],
       [-0.48679125, -0.73371209, -0.7165454 , -1.57997848,  0.0769645 ,
        -0.87409241]]), array([[ 2.58923779,  1.8053751 ,  2.86603663, -0.47725498,  1.0644449 ,
         1.79968527, -0.15092587, -2.31082632, -2.08959344,  1.60239601],
       [-1.2724964 , -0.00997376, -2.93689947,  0.19499157, -0.76769371,
        -1.69764374, -0.51897204, -0.17236923,  1.31992289, -1.19627994],
       [ 0.0577116 , -0.58941055, -0.93407077, -1.08973687, -0.56416202,
        -2.32220976, -0.51100703, -0.60893228, -3.03243916,  1.84873403],
       [-1.15421103,  0.17280903,  0.03379241,  0.36819644, -2.46327794,
         0.16215091, -1.91122606, -1.01088372,  0.87941055,  1.43570352]])], shapes: [(10, 6), (4, 10)]


DEMO: trained network: biases --> 

[array([[ 1.6167755 ],
       [-1.11333515],
       [ 1.05422951],
       [-1.18916161],
       [ 1.82720832],
       [ 0.92812274],
       [ 1.04813361],
       [-0.82835371],
       [-2.20697958],
       [ 1.147337  ]]), array([[ 0.19533182],
       [ 1.17661363],
       [-0.65412272],
       [-1.7679914 ]])], shapes: [(10, 1), (4, 1)]


DEMO: data_set_name: car


DEMO: trained network: AVERAGE ACCURACY --> 0.8133739999999999


real	30m13.400s
user	29m27.759s
sys	0m7.420s
